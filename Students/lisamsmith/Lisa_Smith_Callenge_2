#Python Challenge 2 ECEN 303
#Lisa Smith
import random
import matplotlib.pyplot as plt

#Bernoulli function returns 1 or 0 based on % passed as p
def BernRandom(p):
	if random.random() < p:
		return 1
	else:
		return 0

TrialSequence = []
NumberTrials = 10000
SampleSpaceSize = 10
#get SampleSpaceSize number of Bernoulli's for NumberTrials trials
for i in range(0, NumberTrials):
	TrialSequence.append(0);
	for n in range(0, SampleSpaceSize):
		TrialSequence[i] += BernRandom(.75)

percent = []
for OutcomeIndex in range(0, SampleSpaceSize+1):
	percent.append(TrialSequence.count(OutcomeIndex) / float(NumberTrials))
print(percent)

#matplotlib draw distribution, which looks like a Gausian distribution
plt.plot(percent)
plt.ylabel("Incidence Rate")
plt.show()
